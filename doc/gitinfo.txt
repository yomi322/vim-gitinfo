*gitinfo.txt*	Show git information.

Version: 0.0.1
Author: yomi <yomi322@gmail.com>
License: MIT License

==============================================================================
CONTENTS					*gitinfo-contents*

INTRODUCTION			|gitinfo-introduction|
INTERFACE			|gitinfo-interface|
  FUNCTIONS			  |gitinfo-functions|
ISSUES				|gitinfo-issues|
CHANGELOG			|gitinfo-changelog|



==============================================================================
INTRODUCTION					*gitinfo-introduction*

*gitinfo* is a Vim plugin to show git information on |statusline| or
|tabline| as vcs_info does in zsh. Functions to get the information are
provided.

Requirements:
- git (http://git-scm.com/)

Latest Version:
https://github.com/yomi322/vim-gitinfo



==============================================================================
INTERFACE					*gitinfo-interface*

------------------------------------------------------------------------------
FUNCTIONS					*gitinfo-functions*

USAGE				RESULT	DESCRIPTION

gitinfo#branch()		String	the branch name
gitinfo#action()		String	the action name
gitinfo#revision()		String	the hash of the current commit
gitinfo#unstaged({exp1} [, {exp2}])
				String	check if there are unstaged changes
gitinfo#staged({exp1} [, {exp2}])
				String	check if there are staged changes


						*gitinfo#branch()*
gitinfo#branch()
	The result is the name of the current branch. If the current HEAD is
	detached or the current working directory is not git-controlled, an
	empty string is returned.

						*gitinfo#action()*
gitinfo#action()
	The result is a string corresponding to the action (e.g. merge,
	rebase) in case there is an action. It returns an empty string in the
	other case.

						*gitinfo#revision()*
gitinfo#revision()
	The result is a string describing the hash value of the currently
	checked out commit. If the current working directory is not
	git-controlled, an empty string is returned.

						*gitinfo#unstaged()*
gitinfo#unstaged({exp1} [, {exp2}])
	The result is a string of {exp1}, if there are unstaged changes.
	Otherwise a string of {exp2} is returned. When {exp2} is not given,
	an empty string is used instead.
	Changes in untracked files are ignored.

						*gitinfo#staged()*
gitinfo#staged({exp1} [, {exp2}])
	The result is a string of {exp1}, if there are staged changes.
	Otherwise a string of {exp2} is returned. When {exp2} is not given,
	an empty string is used instead.



==============================================================================
ISSUES						*gitinfo-issues*

- Currently, there is no known issue.



==============================================================================
CHANGELOG					*gitinfo-changelog*

0.0.1	2012-09-13
	  - Initial version.



==============================================================================
vim:tw=78:fo=tcq2mM:ts=8:ft=help:norl
